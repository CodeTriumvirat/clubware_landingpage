---
interface PricingCardProps {
  planName: string;
  price: string;
  features: { name: string; included: boolean }[];
}

const {
  planName = "",
  price = "",
  features = [],
} = Astro.props as PricingCardProps;
---

<div
  class="card-shadow w-full max-w-sm p-4 bg-gray-950 bg-opacity-40 rounded-lg shadow-lg sm:p-8"
>
  <h5 class="mb-4 text-xl">
    {planName}
  </h5>
  <div class="flex items-baseline">
    <span class="text-2xl font-extrabold tracking-tight">{price}</span>
    <span class="ms-1 font-normal">/month</span>
  </div>
  <ul role="list" class="space-y-5 my-7">
    {
      features.map((feature) => (
        <li class="flex items-center">
          <svg
            class={`flex-shrink-0 w-4 h-4 ${feature.included && "text-habibiViolet-800"}`}
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
          </svg>
          <span
            class={`text-base font-normal leading-tight  ms-3 ${!feature.included && "line-through decoration-gray-100"}`}
          >
            {feature.name}
          </span>
        </li>
      ))
    }
  </ul>
  <slot />
</div>
